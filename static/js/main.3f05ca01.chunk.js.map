{"version":3,"sources":["components/navBar.js","components/top5.js","pages/home.js","pages/testVsCases.js","pages/ageGroups.js","pages/hospitalBeds.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","open","setOpen","classes","this","className","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","setState","edge","menuButton","hide","Typography","variant","noWrap","Drawer","drawer","drawerOpen","drawerClose","paper","toolbar","Divider","List","ListItem","button","key","component","Link","to","ListItemIcon","ListItemText","primary","listItemText","Component","withStyles","theme","display","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","breakpoints","up","alignItems","justifyContent","padding","mixins","content","flexGrow","fontSize","paddingZero","Top5","top5_","top5","map","state_data","Box","p","States","Card","card","CardContent","titleCard","style","flex","titleContent","countContent","Confirmed","Cured","Deaths","flexWrap","m","minWidth","textAlign","fontWeight","Home","world","startDate","endDate","axios","get","then","res","data","catch","err","console","log","names","length","worldData","graphDiv","document","getElementById","layout","hovermode","sliders","currentvalue","visible","prefix","xanchor","font","size","steps","sliderSteps","Plotly","newPlot","chart","config","responsive","addFrames","framedata","animate","fig_world_animate","displaytop5","LinearProgress","displayWorld","id","Grid","container","item","sm","xs","maxDeviceWidth","orientation","minDeviceWidth","TestvsCases","tests","cases","displaytests","useResizeHandler","legend","AgeGroups","agesData","displayages","HospitalBeds","hospData","displayhosps","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3f05ca01.chunk.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/ToolBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport SupervisorAccountOutlinedIcon from '@material-ui/icons/SupervisorAccountOutlined';\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\n\nconst drawerWidth = 280;\nconst useStyles = theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 30,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    listItemText:{\n        fontSize:'1em',\n    },\n    paddingZero:{\n        padding:0,\n    }\n  });\n  \nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    state={\n        open:false,\n        setOpen:false\n    };\n\n    render() {\n       \n\n\nconst {classes} = this.props;\n       \n        const handleDrawerOpen = () => {\n            this.setState({open:true});\n        };\n    \n        const handleDrawerClose = () => {\n            this.setState({open:false});\n        };\n        return (\n\n            <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n              position=\"fixed\"\n              className={clsx(classes.appBar, {\n                [classes.appBarShift]: this.state.open,\n              })}\n            >\n              <Toolbar>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={handleDrawerOpen}\n                  edge=\"start\"\n                  className={clsx(classes.menuButton, {\n                    [classes.hide]: this.state.open,\n                  })}\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                  COVID-19 India Data Dashboard\n                </Typography>\n              </Toolbar>\n            </AppBar>\n            <Drawer\n              variant=\"permanent\"\n              className={clsx(classes.drawer, {\n                [classes.drawerOpen]: this.state.open,\n                [classes.drawerClose]: !this.state.open,\n              })}\n              classes={{\n                paper: clsx({\n                  [classes.drawerOpen]: this.state.open,\n                  [classes.drawerClose]: !this.state.open,\n                }),\n              }}\n            >\n              <div className={classes.toolbar}>\n                <IconButton onClick={handleDrawerClose}>\n                  <ChevronLeftIcon /> \n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                \n                  <ListItem button key=\"Home\" component={Link} to=\"/\">\n                    <ListItemIcon><HomeIcon /> </ListItemIcon>\n                    <ListItemText classes={{primary:classes.listItemText}} primary=\"Home\" />\n                  </ListItem>\n                  <ListItem button key=\"Tests v/s Cases Summary\" component={Link} to=\"/testvscases\">\n                    <ListItemIcon><AssessmentIcon /> </ListItemIcon>\n                    <ListItemText classes={{primary:classes.listItemText}} primary=\"Tests v/s Cases Summary\" />\n                  </ListItem>\n                  <ListItem button key=\"Distribution wrt Age groups\" component={Link} to=\"/agegroup\">\n                    <ListItemIcon><SupervisorAccountOutlinedIcon /> </ListItemIcon>\n                    <ListItemText classes={{primary:classes.listItemText}} primary=\"Distribution wrt Age groups\" />\n                  </ListItem>\n                  <ListItem button key=\"Hospitalizations Summary\" component={Link} to=\"/hospitalsbeds\">\n                    <ListItemIcon><LocalHospitalOutlinedIcon /> </ListItemIcon>\n                    <ListItemText classes={{primary:classes.listItemText}} primary=\"Hospitalizations Summary\" />\n                  </ListItem>\n                \n              </List>\n\n            </Drawer>\n            </div>\n            \n        );\n    }\n}\n\n\n\nexport default withStyles(useStyles)(NavBar);","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n    card:{\n        padding:10,\n        minWidth:80\n    },\n    titleCard:{\n        fontSize:10,\n        textAlign:'center',\n        \n    },\n    titleContent:{\n        fontSize:7,\n        textAlign:'center',\n    },\n    countContent:{\n        fontSize:13,\n        fontWeight:'bold',\n        textAlign:'center',\n    }\n    \n  });\nclass Top5 extends Component {\n    \n    render() {\n        const {classes} = this.props;\n        const top5_=this.props.top5.map(state_data=>\n\n\n        <Box p={1} >\n        <div key={state_data.States}>\n        \n        <Card className={classes.card}>\n            <CardContent className=\"padding0\">\n            <Typography className={classes.titleCard} style={{color:'#ca5d00'}}>\n                {state_data.States}\n                </Typography>\n               \n                \n            </CardContent>\n\n            <Box display={'flex'}>\n                <Box p={3} flex={'auto'} className=\"padding10\">\n                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                    Confirmed\n                </Typography>\n                <Typography className={classes.countContent} color={'primary'}>\n                {state_data.Confirmed}\n                </Typography>\n                </Box>\n                <Box p={3} flex={'auto'} className=\"padding10\">\n                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                        Cured\n                </Typography>\n                <Typography className={classes.countContent} style={{color:\"#0e840c\"}}>\n                {state_data.Cured}\n                </Typography>\n                </Box>\n                <Box p={3} flex={'auto'} className=\"padding10\">\n                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                        Deaths\n                </Typography>\n                <Typography className={classes.countContent} color={'error'}>\n                {state_data.Deaths}\n                </Typography>\n                </Box>\n            </Box>\n        </Card>\n        </div>\n        </Box>\n        \n     \n\n            \n        \n\n        );\n        return (\n            <div>\n                <Box flexWrap=\"wrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" m={2} p={5} className=\"padding0\" >\n                {top5_}\n                </Box>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Top5);","import React, { Component, PropTypes } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from 'axios';\nimport Top5 from '../components/top5';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport MediaQuery from 'react-responsive';\n\nimport Plotly from 'plotly.js';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state={\n        top5:null,\n        world:null,\n        startDate:null,\n        endDate:null\n    };\n    componentDidMount(){\n      axios.get('https://covid-india-data-dashboard.herokuapp.com/getCounts').then(res=>{\n        //console.log(res);\n        this.setState({\n          top5:res.data\n        })\n    }).catch(err=>{\n        console.log(err)\n    })\n      axios.get('https://covid-india-data-dashboard.herokuapp.com/getWorldmap').then(res=>{\n        //console.log(res);\n        this.setState({\n          world:res.data,\n          startDate:res.data.names[0],\n          endDate:res.data.names[res.data.names.length - 1]\n        })\n        const worldData=this.state.world;\n        var graphDiv = document.getElementById('myDiv');\n         var layout = {\n           hovermode: 'closest',\n           sliders: [{\n             currentvalue: {\n               visible: true,\n               prefix: 'Cases as of ',\n               xanchor: 'center',\n               font: {size: 14, color: '#666'}\n             },\n             steps: worldData.sliderSteps\n           }]\n         };\n         var config = {responsive: true}\n       Plotly.newPlot(graphDiv,  {data:worldData.chart,\n         layout: layout,config:config}).then(function () {\n       Plotly.addFrames(graphDiv,worldData.framedata)}).then(\n       \n           function () {\n             Plotly.animate(graphDiv, worldData.names, worldData.fig_world_animate)\n           });\n    }).catch(err=>{\n        console.log(err)\n    });\n    }\n\n    \n\n\n    render() {\n\n      \n        let displaytop5=this.state.top5? (\n        <div>\n            <Top5 top5={this.state.top5}></Top5>\n        </div>):\n        <div className=\"padding10per\">\n        <Typography color=\"textSecondary\">Loading...</Typography><LinearProgress color=\"secondary\" />\n        </div>;\n        let displayWorld=this.state.world? (\n          <div>\n            \n          \n          <div>\n                <h4><center>World-wide spread summary from {this.state.startDate} to {this.state.endDate}</center></h4>\n                <div id=\"myDiv\"></div>\n                \n            </div>\n          \n            \n            </div>\n            ):\n            <div className=\"padding10per\">\n            <Typography color=\"textSecondary\">Loading...</Typography><LinearProgress color=\"secondary\" />\n            </div>;\n        return(\n        <Grid container>\n                <Grid item sm={12} xs={12}>\n                    <h4><center>Top 5 Most Affected States as of 11 June 2020</center></h4>\n                <div>{displaytop5}</div>\n                </Grid>\n                <Grid item sm={12} xs={12}>\n                <MediaQuery maxDeviceWidth={424} orientation={'portrait'}>\n              <Typography color=\"textSecondary\"  className=\"alignCenter\">Sorry! We cannot render in portrait mode! Kindly change the orientation to view the graph...</Typography>\n          </MediaQuery>\n          <MediaQuery minDeviceWidth={424} >\n                <div>{displayWorld}</div>\n                \n                </MediaQuery>\n                \n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nHome.propTypes = {\n\n};\n\nexport default Home;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nclass TestvsCases extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state={\n        tests:null,\n        cases:null\n    };\n    componentDidMount(){\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getTests').then(res=>{\n            //console.log(res);\n            this.setState({\n                tests:res.data.tests,\n                cases:res.data.cases\n            })\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        var layout_={legend : {font : {size : 6, color : \"#000\"}}};\n        \n        let displaytests=this.state.tests? (\n        <div>\n            <h4><center>Statewise summary of tests done per day</center></h4>\n                \n        <div className=\"alignCenter\">\n            <Plot data={this.state.tests}\n            useResizeHandler={true}\n            responsive={true}\n            layout={layout_}\n            \n            ></Plot>\n        </div>\n        {/* <h4><center>Statewise summary of Confirmed Cases per day</center></h4>\n                \n        <div className=\"alignCenter\">\n            <Plot data={this.state.tests}\n            useResizeHandler={true}\n            responsive={true}\n            layout={layout_}\n            \n            ></Plot>\n        </div> */}\n        </div>\n        ):\n        <div className=\"padding10per\">\n        <Typography color=\"textSecondary\">Loading...</Typography>\n        <LinearProgress color=\"secondary\" />\n        </div>;\n        return(\n        <Grid container>\n                <Grid item sm={12} xs={12}>\n                    <div>{displaytests}</div>\n                </Grid>\n                \n            </Grid>\n        );\n    }\n}\n\nTestvsCases.propTypes = {\n\n};\n\nexport default TestvsCases;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nclass AgeGroups extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state={\n        agesData:null,\n    };\n    componentDidMount(){\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getAges').then(res=>{\n            //console.log(res);\n            this.setState({\n                agesData:res.data\n            })\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        let displayages=this.state.agesData? (\n            <div>\n                <h4><center>Summary of Confirmed cases as per Age Gruops</center></h4>\n                    \n            <div className=\"alignCenter\">\n                <Plot data={this.state.agesData.chart}\n                useResizeHandler={true}\n                responsive={true}\n                layout={this.state.agesData.layout}\n                \n                ></Plot>\n            </div>\n            \n            </div>\n            ):\n            <div className=\"padding10per\">\n            <Typography color=\"textSecondary\">Loading...</Typography>\n            <LinearProgress color=\"secondary\" />\n            </div>;\n            return(\n            <Grid container>\n                    <Grid item sm={12} xs={12}>\n                        <div>{displayages}</div>\n                    </Grid>\n                    \n                </Grid>\n            );                \n\n    }\n}\n\nAgeGroups.propTypes = {\n\n};\n\nexport default AgeGroups;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nclass HospitalBeds extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state={\n        hospData:null,\n    };\n    componentDidMount(){\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getHospitals').then(res=>{\n            //console.log(res);\n            this.setState({\n                hospData:res.data\n            })\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        let displayhosps=this.state.hospData? (\n            <div>\n                <h4><center>Summary of Number of total beds available v/s Confirmed cases</center></h4>\n                    \n            <div className=\"alignCenter\">\n                <Plot data={this.state.hospData.chart}\n                useResizeHandler={true}\n                responsive={true}\n                layout={this.state.hospData.layout}\n                \n                ></Plot>\n            </div>\n            \n            </div>\n            ):\n            <div className=\"padding10per\">\n            <Typography color=\"textSecondary\">Loading...</Typography>\n            <LinearProgress color=\"secondary\" />\n            </div>;\n            return(\n            <Grid container>\n                    <Grid item sm={12} xs={12}>\n                        <div>{displayhosps}</div>\n                    </Grid>\n                    \n                </Grid>\n            );                \n\n    }\n}\n\nHospitalBeds.propTypes = {\n\n};\n\nexport default HospitalBeds;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from './components/navBar';\nimport Home from './pages/home';\nimport TestvsCases from './pages/testVsCases';\nimport AgeGroups from './pages/ageGroups';\nimport HospitalBeds from './pages/hospitalBeds';\n\nfunction App() {\n  return (\n    <Router>\n        \n        <NavBar/>\n        <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route exact path=\"/testvscases\" component={TestvsCases}></Route>\n          <Route exact path=\"/agegroup\" component={AgeGroups}></Route>\n          <Route exact path=\"/hospitalsbeds\" component={HospitalBeds}></Route>\n        </Switch>\n        </div>\n        \n       \n      \n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}