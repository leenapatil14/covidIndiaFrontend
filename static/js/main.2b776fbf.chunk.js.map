{"version":3,"sources":["components/navBar.js","components/top5.js","pages/home.js","pages/testVsCases.js","pages/ageGroups.js","pages/hospitalBeds.js","pages/datainfo.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","open","setOpen","classes","this","className","root","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","setState","edge","menuButton","hide","Typography","variant","noWrap","Drawer","drawer","drawerOpen","drawerClose","paper","toolbar","Divider","List","ListItem","button","key","component","Link","to","ListItemIcon","ListItemText","primary","listItemText","Component","withStyles","theme","display","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","marginRight","flexShrink","whiteSpace","overflowX","spacing","breakpoints","up","alignItems","justifyContent","padding","mixins","content","flexGrow","fontSize","paddingZero","Top5","console","log","top5_","top5","map","state_data","Box","p","loc","Card","card","CardContent","titleCard","style","flex","titleContent","countContent","totalConfirmed","discharged","deaths","flexWrap","m","minWidth","textAlign","fontWeight","Home","world","startDate","endDate","today","axios","get","then","res","data","catch","err","names","length","worldData","graphDiv","document","getElementById","layout","hovermode","sliders","currentvalue","visible","prefix","xanchor","font","size","steps","sliderSteps","Plotly","newPlot","chart","config","responsive","addFrames","framedata","animate","fig_world_animate","displaytop5","JSON","parse","LinearProgress","displayWorld","id","Grid","container","item","sm","xs","maxDeviceWidth","orientation","minDeviceWidth","TestvsCases","tests","cases","mapData","stats_data","max_","Math","max","min_","min","type","text","lon","lat","marker","x","dragmode","mapbox","center","zoom","margin","r","t","b","l","displaytests","md","lg","State_Name","useResizeHandler","AgeGroups","agesData","displayages","total","HospitalBeds","hospData","displayhosps","DataInfo","href","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2b776fbf.chunk.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/ToolBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport SupervisorAccountOutlinedIcon from '@material-ui/icons/SupervisorAccountOutlined';\nimport LocalHospitalOutlinedIcon from '@material-ui/icons/LocalHospitalOutlined';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst drawerWidth = 280;\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 30,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  listItemText: {\n    fontSize: '1em',\n  },\n  paddingZero: {\n    padding: 0,\n  }\n});\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    open: false,\n    setOpen: false\n  };\n\n  render() {\n\n\n\n    const { classes } = this.props;\n\n    const handleDrawerOpen = () => {\n      this.setState({ open: true });\n    };\n\n    const handleDrawerClose = () => {\n      this.setState({ open: false });\n    };\n    return (\n\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: this.state.open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: this.state.open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              COVID-19 India Data Dashboard\n                </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n\n            <ListItem button key=\"Home\" component={Link} to=\"/covidIndiaFrontend/\">\n              <ListItemIcon><HomeIcon /> </ListItemIcon>\n              <ListItemText classes={{ primary: classes.listItemText }} primary=\"Home\" />\n            </ListItem>\n            <ListItem button key=\"Tests v/s Cases Summary\" component={Link} to=\"/covidIndiaFrontend/testvscases\">\n              <ListItemIcon><AssessmentIcon /> </ListItemIcon>\n              <ListItemText classes={{ primary: classes.listItemText }} primary=\"Tests v/s Cases Summary\" />\n            </ListItem>\n            <ListItem button key=\"Distribution wrt Age groups\" component={Link} to=\"/covidIndiaFrontend/agegroup\">\n              <ListItemIcon><SupervisorAccountOutlinedIcon /> </ListItemIcon>\n              <ListItemText classes={{ primary: classes.listItemText }} primary=\"Distribution wrt Age groups\" />\n            </ListItem>\n            <ListItem button key=\"Hospitalizations Summary\" component={Link} to=\"/covidIndiaFrontend/hospitalsbeds\">\n              <ListItemIcon><LocalHospitalOutlinedIcon /> </ListItemIcon>\n              <ListItemText classes={{ primary: classes.listItemText }} primary=\"Hospitalizations Summary\" />\n            </ListItem>\n            <ListItem button key=\"Info\" component={Link} to=\"/covidIndiaFrontend/datainfo\">\n              <ListItemIcon><InfoIcon /> </ListItemIcon>\n              <ListItemText classes={{ primary: classes.listItemText }} primary=\"Info\" />\n            </ListItem>\n\n          </List>\n\n        </Drawer>\n      </div>\n\n    );\n  }\n}\n\n\n\nexport default withStyles(useStyles)(NavBar);","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = theme => ({\n    card: {\n        padding: 10,\n        minWidth: 80\n    },\n    titleCard: {\n        fontSize: 10,\n        textAlign: 'center',\n\n    },\n    titleContent: {\n        fontSize: 7,\n        textAlign: 'center',\n    },\n    countContent: {\n        fontSize: 13,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    }\n\n});\nclass Top5 extends Component {\n\n    render() {\n        const { classes } = this.props;\n        console.log(this.props);\n        const top5_ = this.props.top5.map(state_data =>\n\n\n            <Box p={1} >\n                <div key={state_data.loc}>\n\n                    <Card className={classes.card}>\n                        <CardContent className=\"padding0\">\n                            <Typography className={classes.titleCard} style={{ color: '#ca5d00' }}>\n                                {state_data.loc}\n                            </Typography>\n\n\n                        </CardContent>\n\n                        <Box display={'flex'}>\n                            <Box p={3} flex={'auto'} className=\"padding10\">\n                                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                                    Confirmed\n                </Typography>\n                                <Typography className={classes.countContent} color={'primary'}>\n                                    {state_data.totalConfirmed}\n                                </Typography>\n                            </Box>\n                            <Box p={3} flex={'auto'} className=\"padding10\">\n                                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                                    Cured\n                </Typography>\n                                <Typography className={classes.countContent} style={{ color: \"#0e840c\" }}>\n                                    {state_data.discharged}\n                                </Typography>\n                            </Box>\n                            <Box p={3} flex={'auto'} className=\"padding10\">\n                                <Typography color=\"textSecondary\" className={classes.titleContent}>\n                                    Deaths\n                </Typography>\n                                <Typography className={classes.countContent} color={'error'}>\n                                    {state_data.deaths}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Card>\n                </div>\n            </Box>\n\n\n\n\n\n\n        );\n        return (\n            <div>\n                <Box flexWrap=\"wrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" m={2} p={5} className=\"padding0\" >\n                    {top5_}\n                </Box>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Top5);","import React, { Component, PropTypes } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport axios from 'axios';\nimport Top5 from '../components/top5';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport MediaQuery from 'react-responsive';\n\nimport Plotly from 'plotly.js';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n  state = {\n    top5: null,\n    world: null,\n    startDate: null,\n    endDate: null,\n    today: null\n  };\n  componentDidMount() {\n    axios.get('https://covid-india-data-dashboard.herokuapp.com/getCounts').then(res => {\n      console.log(res);\n      this.setState({\n        top5: res.data\n      })\n    }).catch(err => {\n      console.log(err)\n    })\n    axios.get('https://covid-india-data-dashboard.herokuapp.com/getWorldmap').then(res => {\n      //console.log(res);\n      this.setState({\n        world: res.data,\n        startDate: res.data.names[0],\n        endDate: res.data.names[res.data.names.length - 1]\n      })\n      const worldData = this.state.world;\n      var graphDiv = document.getElementById('myDiv');\n      var layout = {\n        hovermode: 'closest',\n        sliders: [{\n          currentvalue: {\n            visible: true,\n            prefix: 'New Cases as of ',\n            xanchor: 'center',\n            font: { size: 14, color: '#666' }\n          },\n          steps: worldData.sliderSteps\n        }]\n      };\n      var config = { responsive: true }\n      Plotly.newPlot(graphDiv, {\n        data: worldData.chart,\n        layout: layout, config: config\n      }).then(function () {\n        Plotly.addFrames(graphDiv, worldData.framedata)\n      }).then(\n\n        function () {\n          Plotly.animate(graphDiv, worldData.names, worldData.fig_world_animate)\n        });\n    }).catch(err => {\n      console.log(err)\n    });\n  }\n\n\n\n\n  render() {\n\n\n    let displaytop5 = this.state.top5 ? (\n      <div>\n        <h4><center>Top 5 Most Affected States as of {this.state.top5.today}</center></h4>\n        <Top5 top5={JSON.parse(this.state.top5.data)}></Top5>\n      </div>) :\n      <div className=\"padding10per\">\n        <Typography color=\"textSecondary\">Loading...</Typography><LinearProgress color=\"secondary\" />\n      </div>;\n    let displayWorld = this.state.world ? (\n      <div>\n\n\n        <div>\n          <h4><center>World-wide spread summary from {this.state.startDate} to {this.state.endDate}</center></h4>\n          <div id=\"myDiv\"></div>\n\n        </div>\n\n\n      </div>\n    ) :\n      <div className=\"padding10per\">\n        <Typography color=\"textSecondary\">Loading...</Typography><LinearProgress color=\"secondary\" />\n      </div>;\n    return (\n      <Grid container>\n        <Grid item sm={12} xs={12}>\n\n          <div>{displaytop5}</div>\n        </Grid>\n        <Grid item sm={12} xs={12}>\n          <MediaQuery maxDeviceWidth={424} orientation={'portrait'}>\n            <Typography color=\"textSecondary\" className=\"alignCenter\">Sorry! We cannot render in portrait mode! Kindly change the orientation to view the graph...</Typography>\n          </MediaQuery>\n          <MediaQuery minDeviceWidth={424} >\n            <div>{displayWorld}</div>\n\n          </MediaQuery>\n\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nHome.propTypes = {\n\n};\n\nexport default Home;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Plotly from 'plotly.js';\nclass TestvsCases extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        tests: null,\n        cases: null,\n        mapData: null\n    };\n    componentDidMount() {\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getStatewiseStats').then(res => {\n            //console.log(res.data);\n            this.setState({\n                tests: res.data.stats_data\n            })\n\n        }).catch(err => {\n            console.log(err)\n        });\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getStateMap').then(res => {\n            //console.log(res.data);\n            this.setState({\n                mapData: res.data\n            });\n\n            var max_ = Math.max(...this.state.mapData.totalConfirmed);\n            var low = 10;\n            var high = 45;\n            var min_ = Math.min(...this.state.mapData.totalConfirmed);\n\n            var data = [\n                {\n                    type: \"scattermapbox\",\n                    text: this.state.mapData.text,\n                    lon: this.state.mapData.lon,\n                    lat: this.state.mapData.lat,\n                    marker: { color: \"#3f51b5\", size: this.state.mapData.totalConfirmed.map(x => (((x - min_) * (high - low)) / (max_ - min_)) + low), min: 5 }\n                }\n            ];\n            console.log(data)\n            var layout = {\n                dragmode: \"zoom\",\n                mapbox: { style: \"open-street-map\", center: { lat: 21.30039105, lon: 76.13001949 }, zoom: 3 },\n                margin: { r: 0, t: 0, b: 0, l: 0 }\n            };\n\n            Plotly.newPlot(graphDiv, data, layout);\n\n        }).catch(err => {\n            console.log(err)\n        });\n        var graphDiv = document.getElementById('statesDiv');\n\n    }\n\n\n    render() {\n        var layout_ = { legend: { font: { size: 6, color: \"#000\" } } };\n\n        let displaytests = this.state.tests ? (\n            <Grid container>\n                {this.state.tests.map(state =>\n                    <Grid item xs={12} sm={6} md={6} lg={4} className=\"alignCenter\">\n\n\n                        <h4><center> Summary of {state.State_Name} </center></h4>\n                        <Plot data={state.chart}\n                            useResizeHandler={true}\n                            responsive={true}\n                            layout={state.layout}\n\n                        ></Plot>\n                    </Grid>\n\n\n                )\n\n                }\n            </Grid>\n        ) :\n            <div className=\"padding10per\">\n                <Typography color=\"textSecondary\">Loading...</Typography>\n                <LinearProgress color=\"secondary\" />\n            </div>;\n        return (\n            <div className=\"padding10\">\n                <h4><center> Statewise total confirmed cases in India till date</center></h4>\n                <div id=\"statesDiv\"></div>\n                \n                {displaytests}\n\n\n            </div>\n\n        );\n    }\n}\n\nTestvsCases.propTypes = {\n\n};\n\nexport default TestvsCases;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nclass AgeGroups extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        agesData: null,\n    };\n    componentDidMount() {\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getAges').then(res => {\n            //console.log(res);\n            this.setState({\n                agesData: res.data\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        let displayages = this.state.agesData ? (\n            <div>\n                <h4><center>Summary of confirmed cases as per Age Groups(Total individuals considered: {this.state.agesData.total})</center></h4>\n\n                <div className=\"alignCenter\">\n                    <Plot data={this.state.agesData.chart}\n                        useResizeHandler={true}\n                        responsive={true}\n                        layout={this.state.agesData.layout}\n\n                    ></Plot>\n                </div>\n\n            </div>\n        ) :\n            <div className=\"padding10per\">\n                <Typography color=\"textSecondary\">Loading...</Typography>\n                <LinearProgress color=\"secondary\" />\n            </div>;\n        return (\n            <Grid container>\n                <Grid item sm={12} xs={12}>\n                    <div>{displayages}</div>\n                </Grid>\n\n            </Grid>\n        );\n\n    }\n}\n\nAgeGroups.propTypes = {\n\n};\n\nexport default AgeGroups;","import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nclass HospitalBeds extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state = {\n        hospData: null,\n    };\n    componentDidMount() {\n        axios.get('https://covid-india-data-dashboard.herokuapp.com/getHospitals').then(res => {\n            //console.log(res);\n            this.setState({\n                hospData: res.data\n            })\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n\n    render() {\n        let displayhosps = this.state.hospData ? (\n            <div>\n                <h4><center>Summary of number of total beds available v/s Confirmed cases</center></h4>\n\n                <div className=\"alignCenter\">\n                    <Plot data={this.state.hospData.chart}\n                        useResizeHandler={true}\n                        responsive={true}\n                        layout={this.state.hospData.layout}\n\n                    ></Plot>\n                </div>\n\n            </div>\n        ) :\n            <div className=\"padding10per\">\n                <Typography color=\"textSecondary\">Loading...</Typography>\n                <LinearProgress color=\"secondary\" />\n            </div>;\n        return (\n            <Grid container>\n                <Grid item sm={12} xs={12}>\n                    <div>{displayhosps}</div>\n                </Grid>\n                <Grid item xs={12} >\n                    <Grid container className=\"alignCenter\">\n                        <Grid item xs={4} md={4} lg={4}></Grid>\n                        <Grid item xs={4} md={4} lg={4}>\n                            <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">\n                                Considered Statewise number of hospital beds in Public, AYUSH, Minsitry of Defence, and Employees State Insurance Corporation Hospitals.\n                        </Typography>\n                        </Grid>\n                        <Grid item xs={4} md={4} lg={4}></Grid>\n                    </Grid>\n\n\n\n                </Grid>\n\n            </Grid>\n        );\n\n    }\n}\n\nHospitalBeds.propTypes = {\n\n};\n\nexport default HospitalBeds;","import React, { Component, PropTypes } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nclass DataInfo extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <Grid container className=\"alignCenter\">\n\n                    <Grid item xs={12} >\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">\n                            This website is created using Flask, ReactJS and Material UI and is solely for informational purpose.\n                        </Typography>\n\n\n\n                    </Grid>\n                </Grid>\n\n                <Grid container className=\"alignCenter\" >\n                    <Grid item xs={12} >\n                        <Typography variant=\"body1\" color=\"secondary\">Authors</Typography>\n                    </Grid>\n                    <Grid item xs={12} className=\"padding10\">\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">\n\n                            <Link href=\"https://www.linkedin.com/in/leenamanoharpatil/\" variant=\"p\" color=\"primary\" >\n                                Leena Manohar Patil\n                            </Link>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">\n\n                            <Link href=\"https://www.linkedin.com/in/aditya-sonawane94/\" variant=\"p\" color=\"primary\" >\n                                Aditya Sonawane\n                            </Link>\n                        </Typography>\n\n\n\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                        </Grid>\n                    </Grid>\n\n                </Grid>\n\n                <Grid container className=\"alignCenter\" >\n                    <Grid item xs={12} className=\"padding10\">\n                        <Typography variant=\"body1\" color=\"secondary\">Data Source\n                         Credits</Typography>\n                    </Grid>\n                    <Grid item xs={12} className=\"padding10\">\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">Data for India Covid Cases (updated daily):</Typography>\n                        <Typography className=\"padding10\">\n                            <Link href=\"https://api.rootnet.in/\" variant=\"p\" color=\"primary\" >\n                                COVID-19 REST API for India\n                            </Link>\n                        </Typography>\n\n\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className=\"padding10\">\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">Data for World Covid Cases (updated daily):</Typography>\n                        <Typography className=\"padding10\">\n                            <Link href=\"https://ourworldindata.org/coronavirus\" variant=\"p\" color=\"primary\" >\n                                Data on COVID-19 (coronavirus) by Our World in Data\n                            </Link>\n                        </Typography>\n\n\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className=\"padding10\">\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">Data for Hospitals beds in India:</Typography>\n                        <Typography className=\"padding10\">\n                            <Link href=\"https://pib.gov.in/PressReleasePage.aspx?PRID=1539877\" variant=\"p\" color=\"primary\" >\n                                Ministry of Health and Family Welfare Press Release\n                            </Link>\n                        </Typography>\n\n\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}><Divider className=\"DividerSecondary\" /></Grid>\n                            <Grid item xs={3} md={3} lg={3}></Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} className=\"padding10\">\n\n                        <Typography variant=\"body2\" color=\"textSecondary\" className=\"padding10\">Data for Indian States Latitude and Longitude:</Typography>\n                        <Typography className=\"padding10\">\n                            <Link href=\"https://www.kaggle.com/danishxr/poptable\" variant=\"p\" color=\"primary\" >\n                                Indian states lat&long Dataset from Kaggle\n                            </Link>\n                        </Typography>\n\n\n                    </Grid>\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\n\nexport default DataInfo;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from './components/navBar';\nimport Home from './pages/home';\nimport TestvsCases from './pages/testVsCases';\nimport AgeGroups from './pages/ageGroups';\nimport HospitalBeds from './pages/hospitalBeds';\nimport DataInfo from './pages/datainfo';\n\nfunction App() {\n  return (\n    <Router>\n\n      <NavBar />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/covidIndiaFrontend/\" component={Home}></Route>\n          <Route exact path=\"/covidIndiaFrontend/testvscases\" component={TestvsCases}></Route>\n          <Route exact path=\"/covidIndiaFrontend/agegroup\" component={AgeGroups}></Route>\n          <Route exact path=\"/covidIndiaFrontend/hospitalsbeds\" component={HospitalBeds}></Route>\n          <Route exact path=\"/covidIndiaFrontend/datainfo\" component={DataInfo}></Route>\n        </Switch>\n      </div>\n\n\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}