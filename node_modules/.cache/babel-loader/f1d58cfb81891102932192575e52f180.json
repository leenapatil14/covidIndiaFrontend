{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar createSurface = require('gl-surface3d');\n\nvar ndarray = require('ndarray');\n\nvar homography = require('ndarray-homography');\n\nvar fill = require('ndarray-fill');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\n\nvar str2RgbaArray = require('../../lib/str2rgbarray');\n\nvar extractOpts = require('../../components/colorscale').extractOpts;\n\nvar interp2d = require('../heatmap/interp2d');\n\nvar findEmpties = require('../heatmap/find_empties');\n\nfunction SurfaceTrace(scene, surface, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.surface = surface;\n  this.data = null;\n  this.showContour = [false, false, false];\n  this.contourStart = [null, null, null];\n  this.contourEnd = [null, null, null];\n  this.contourSize = [0, 0, 0];\n  this.minValues = [Infinity, Infinity, Infinity];\n  this.maxValues = [-Infinity, -Infinity, -Infinity];\n  this.dataScaleX = 1.0;\n  this.dataScaleY = 1.0;\n  this.refineData = true;\n  this.objectOffset = [0, 0, 0];\n}\n\nvar proto = SurfaceTrace.prototype;\n\nproto.getXat = function (a, b, calendar, axis) {\n  var v = !isArrayOrTypedArray(this.data.x) ? a : isArrayOrTypedArray(this.data.x[0]) ? this.data.x[b][a] : this.data.x[a];\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getYat = function (a, b, calendar, axis) {\n  var v = !isArrayOrTypedArray(this.data.y) ? b : isArrayOrTypedArray(this.data.y[0]) ? this.data.y[b][a] : this.data.y[b];\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getZat = function (a, b, calendar, axis) {\n  var v = this.data.z[b][a];\n\n  if (v === null && this.data.connectgaps && this.data._interpolatedZ) {\n    v = this.data._interpolatedZ[b][a];\n  }\n\n  return calendar === undefined ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.handlePick = function (selection) {\n  if (selection.object === this.surface) {\n    var xRatio = (selection.data.index[0] - 1) / this.dataScaleX - 1;\n    var yRatio = (selection.data.index[1] - 1) / this.dataScaleY - 1;\n    var j = Math.max(Math.min(Math.round(xRatio), this.data.z[0].length - 1), 0);\n    var k = Math.max(Math.min(Math.round(yRatio), this.data._ylength - 1), 0);\n    selection.index = [j, k];\n    selection.traceCoordinate = [this.getXat(j, k), this.getYat(j, k), this.getZat(j, k)];\n    selection.dataCoordinate = [this.getXat(j, k, this.data.xcalendar, this.scene.fullSceneLayout.xaxis), this.getYat(j, k, this.data.ycalendar, this.scene.fullSceneLayout.yaxis), this.getZat(j, k, this.data.zcalendar, this.scene.fullSceneLayout.zaxis)];\n\n    for (var i = 0; i < 3; i++) {\n      var v = selection.dataCoordinate[i];\n\n      if (v !== null && v !== undefined) {\n        selection.dataCoordinate[i] *= this.scene.dataScale[i];\n      }\n    }\n\n    var text = this.data.hovertext || this.data.text;\n\n    if (Array.isArray(text) && text[k] && text[k][j] !== undefined) {\n      selection.textLabel = text[k][j];\n    } else if (text) {\n      selection.textLabel = text;\n    } else {\n      selection.textLabel = '';\n    }\n\n    selection.data.dataCoordinate = selection.dataCoordinate.slice();\n    this.surface.highlight(selection.data); // Snap spikes to data coordinate\n\n    this.scene.glplot.spikes.position = selection.dataCoordinate;\n    return true;\n  }\n};\n\nfunction isColormapCircular(colormap) {\n  var first = colormap[0].rgb;\n  var last = colormap[colormap.length - 1].rgb;\n  return first[0] === last[0] && first[1] === last[1] && first[2] === last[2] && first[3] === last[3];\n}\n\nvar shortPrimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999];\n\nfunction getPow(a, b) {\n  if (a < b) return 0;\n  var n = 0;\n\n  while (Math.floor(a % b) === 0) {\n    a /= b;\n    n++;\n  }\n\n  return n;\n}\n\nfunction getFactors(a) {\n  var powers = [];\n\n  for (var i = 0; i < shortPrimes.length; i++) {\n    var b = shortPrimes[i];\n    powers.push(getPow(a, b));\n  }\n\n  return powers;\n}\n\nfunction smallestDivisor(a) {\n  var A = getFactors(a);\n  var result = a;\n\n  for (var i = 0; i < shortPrimes.length; i++) {\n    if (A[i] > 0) {\n      result = shortPrimes[i];\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction leastCommonMultiple(a, b) {\n  if (a < 1 || b < 1) return undefined;\n  var A = getFactors(a);\n  var B = getFactors(b);\n  var n = 1;\n\n  for (var i = 0; i < shortPrimes.length; i++) {\n    n *= Math.pow(shortPrimes[i], Math.max(A[i], B[i]));\n  }\n\n  return n;\n}\n\nfunction arrayLCM(A) {\n  if (A.length === 0) return undefined;\n  var n = 1;\n\n  for (var i = 0; i < A.length; i++) {\n    n = leastCommonMultiple(n, A[i]);\n  }\n\n  return n;\n}\n\nproto.calcXnums = function (xlen) {\n  var i;\n  var nums = [];\n\n  for (i = 1; i < xlen; i++) {\n    var a = this.getXat(i - 1, 0);\n    var b = this.getXat(i, 0);\n\n    if (b !== a && a !== undefined && a !== null && b !== undefined && b !== null) {\n      nums[i - 1] = Math.abs(b - a);\n    } else {\n      nums[i - 1] = 0;\n    }\n  }\n\n  var totalDist = 0;\n\n  for (i = 1; i < xlen; i++) {\n    totalDist += nums[i - 1];\n  }\n\n  for (i = 1; i < xlen; i++) {\n    if (nums[i - 1] === 0) {\n      nums[i - 1] = 1;\n    } else {\n      nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n    }\n  }\n\n  return nums;\n};\n\nproto.calcYnums = function (ylen) {\n  var i;\n  var nums = [];\n\n  for (i = 1; i < ylen; i++) {\n    var a = this.getYat(0, i - 1);\n    var b = this.getYat(0, i);\n\n    if (b !== a && a !== undefined && a !== null && b !== undefined && b !== null) {\n      nums[i - 1] = Math.abs(b - a);\n    } else {\n      nums[i - 1] = 0;\n    }\n  }\n\n  var totalDist = 0;\n\n  for (i = 1; i < ylen; i++) {\n    totalDist += nums[i - 1];\n  }\n\n  for (i = 1; i < ylen; i++) {\n    if (nums[i - 1] === 0) {\n      nums[i - 1] = 1;\n    } else {\n      nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n    }\n  }\n\n  return nums;\n};\n\nvar highlyComposites = [1, 2, 4, 6, 12, 24, 36, 48, 60, 120, 180, 240, 360, 720, 840, 1260];\nvar MIN_RESOLUTION = highlyComposites[9];\nvar MAX_RESOLUTION = highlyComposites[13];\n\nproto.estimateScale = function (resSrc, axis) {\n  var nums = axis === 0 ? this.calcXnums(resSrc) : this.calcYnums(resSrc);\n  var resDst = 1 + arrayLCM(nums);\n\n  while (resDst < MIN_RESOLUTION) {\n    resDst *= 2;\n  }\n\n  while (resDst > MAX_RESOLUTION) {\n    resDst--;\n    resDst /= smallestDivisor(resDst);\n    resDst++;\n\n    if (resDst < MIN_RESOLUTION) {\n      // resDst = MIN_RESOLUTION; // option 1: use min resolution\n      resDst = MAX_RESOLUTION; // option 2: use max resolution\n    }\n  }\n\n  var scale = Math.round(resDst / resSrc);\n  return scale > 1 ? scale : 1;\n};\n\nproto.refineCoords = function (coords) {\n  var scaleW = this.dataScaleX;\n  var scaleH = this.dataScaleY;\n  var width = coords[0].shape[0];\n  var height = coords[0].shape[1];\n  var newWidth = Math.floor(coords[0].shape[0] * scaleW + 1) | 0;\n  var newHeight = Math.floor(coords[0].shape[1] * scaleH + 1) | 0; // Pad coords by +1\n\n  var padWidth = 1 + width + 1;\n  var padHeight = 1 + height + 1;\n  var padImg = ndarray(new Float32Array(padWidth * padHeight), [padWidth, padHeight]);\n\n  for (var i = 0; i < coords.length; ++i) {\n    this.surface.padField(padImg, coords[i]);\n    var scaledImg = ndarray(new Float32Array(newWidth * newHeight), [newWidth, newHeight]);\n    homography(scaledImg, padImg, [scaleW, 0, 0, 0, scaleH, 0, 0, 0, 1]);\n    coords[i] = scaledImg;\n  }\n};\n\nfunction insertIfNewLevel(arr, newValue) {\n  var found = false;\n\n  for (var k = 0; k < arr.length; k++) {\n    if (newValue === arr[k]) {\n      found = true;\n      break;\n    }\n  }\n\n  if (found === false) arr.push(newValue);\n}\n\nproto.setContourLevels = function () {\n  var newLevels = [[], [], []];\n  var useNewLevels = [false, false, false];\n  var needsUpdate = false;\n  var i, j, value;\n\n  for (i = 0; i < 3; ++i) {\n    if (this.showContour[i]) {\n      needsUpdate = true;\n\n      if (this.contourSize[i] > 0 && this.contourStart[i] !== null && this.contourEnd[i] !== null && this.contourEnd[i] > this.contourStart[i]) {\n        useNewLevels[i] = true;\n\n        for (j = this.contourStart[i]; j < this.contourEnd[i]; j += this.contourSize[i]) {\n          value = j * this.scene.dataScale[i];\n          insertIfNewLevel(newLevels[i], value);\n        }\n      }\n    }\n  }\n\n  if (needsUpdate) {\n    var allLevels = [[], [], []];\n\n    for (i = 0; i < 3; ++i) {\n      if (this.showContour[i]) {\n        allLevels[i] = useNewLevels[i] ? newLevels[i] : this.scene.contourLevels[i];\n      }\n    }\n\n    this.surface.update({\n      levels: allLevels\n    });\n  }\n};\n\nproto.update = function (data) {\n  var scene = this.scene;\n  var sceneLayout = scene.fullSceneLayout;\n  var surface = this.surface;\n  var alpha = data.opacity;\n  var colormap = parseColorScale(data, alpha);\n  var scaleFactor = scene.dataScale;\n  var xlen = data.z[0].length;\n  var ylen = data._ylength;\n  var contourLevels = scene.contourLevels; // Save data\n\n  this.data = data;\n  /*\n   * Fill and transpose zdata.\n   * Consistent with 'heatmap' and 'contour', plotly 'surface'\n   * 'z' are such that sub-arrays correspond to y-coords\n   * and that the sub-array entries correspond to a x-coords,\n   * which is the transpose of 'gl-surface-plot'.\n   */\n\n  var i, j, k, v;\n  var rawCoords = [];\n\n  for (i = 0; i < 3; i++) {\n    rawCoords[i] = [];\n\n    for (j = 0; j < xlen; j++) {\n      rawCoords[i][j] = [];\n      /*\n      for(k = 0; k < ylen; k++) {\n          rawCoords[i][j][k] = undefined;\n      }\n      */\n    }\n  } // coords x, y & z\n\n\n  for (j = 0; j < xlen; j++) {\n    for (k = 0; k < ylen; k++) {\n      rawCoords[0][j][k] = this.getXat(j, k, data.xcalendar, sceneLayout.xaxis);\n      rawCoords[1][j][k] = this.getYat(j, k, data.ycalendar, sceneLayout.yaxis);\n      rawCoords[2][j][k] = this.getZat(j, k, data.zcalendar, sceneLayout.zaxis);\n    }\n  }\n\n  if (data.connectgaps) {\n    data._emptypoints = findEmpties(rawCoords[2]);\n    interp2d(rawCoords[2], data._emptypoints);\n    data._interpolatedZ = [];\n\n    for (j = 0; j < xlen; j++) {\n      data._interpolatedZ[j] = [];\n\n      for (k = 0; k < ylen; k++) {\n        data._interpolatedZ[j][k] = rawCoords[2][j][k];\n      }\n    }\n  } // Note: log axes are not defined in surfaces yet.\n  // but they could be defined here...\n\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n\n        if (v === null || v === undefined) {\n          rawCoords[i][j][k] = NaN;\n        } else {\n          v = rawCoords[i][j][k] *= scaleFactor[i];\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n\n        if (v !== null && v !== undefined) {\n          if (this.minValues[i] > v) {\n            this.minValues[i] = v;\n          }\n\n          if (this.maxValues[i] < v) {\n            this.maxValues[i] = v;\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < 3; i++) {\n    this.objectOffset[i] = 0.5 * (this.minValues[i] + this.maxValues[i]);\n  }\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < xlen; j++) {\n      for (k = 0; k < ylen; k++) {\n        v = rawCoords[i][j][k];\n\n        if (v !== null && v !== undefined) {\n          rawCoords[i][j][k] -= this.objectOffset[i];\n        }\n      }\n    }\n  } // convert processed raw data to Float32 matrices\n\n\n  var coords = [ndarray(new Float32Array(xlen * ylen), [xlen, ylen]), ndarray(new Float32Array(xlen * ylen), [xlen, ylen]), ndarray(new Float32Array(xlen * ylen), [xlen, ylen])];\n  fill(coords[0], function (row, col) {\n    return rawCoords[0][row][col];\n  });\n  fill(coords[1], function (row, col) {\n    return rawCoords[1][row][col];\n  });\n  fill(coords[2], function (row, col) {\n    return rawCoords[2][row][col];\n  });\n  rawCoords = []; // free memory\n\n  var params = {\n    colormap: colormap,\n    levels: [[], [], []],\n    showContour: [true, true, true],\n    showSurface: !data.hidesurface,\n    contourProject: [[false, false, false], [false, false, false], [false, false, false]],\n    contourWidth: [1, 1, 1],\n    contourColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n    contourTint: [1, 1, 1],\n    dynamicColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n    dynamicWidth: [1, 1, 1],\n    dynamicTint: [1, 1, 1],\n    opacityscale: data.opacityscale,\n    opacity: data.opacity\n  };\n  var cOpts = extractOpts(data);\n  params.intensityBounds = [cOpts.min, cOpts.max]; // Refine surface color if necessary\n\n  if (data.surfacecolor) {\n    var intensity = ndarray(new Float32Array(xlen * ylen), [xlen, ylen]);\n    fill(intensity, function (row, col) {\n      return data.surfacecolor[col][row];\n    });\n    coords.push(intensity);\n  } else {\n    // when 'z' is used as 'intensity',\n    // we must scale its value\n    params.intensityBounds[0] *= scaleFactor[2];\n    params.intensityBounds[1] *= scaleFactor[2];\n  }\n\n  if (MAX_RESOLUTION < coords[0].shape[0] || MAX_RESOLUTION < coords[0].shape[1]) {\n    this.refineData = false;\n  }\n\n  if (this.refineData === true) {\n    this.dataScaleX = this.estimateScale(coords[0].shape[0], 0);\n    this.dataScaleY = this.estimateScale(coords[0].shape[1], 1);\n\n    if (this.dataScaleX !== 1 || this.dataScaleY !== 1) {\n      this.refineCoords(coords);\n    }\n  }\n\n  if (data.surfacecolor) {\n    params.intensity = coords.pop();\n  }\n\n  var highlightEnable = [true, true, true];\n  var axis = ['x', 'y', 'z'];\n\n  for (i = 0; i < 3; ++i) {\n    var contourParams = data.contours[axis[i]];\n    highlightEnable[i] = contourParams.highlight;\n    params.showContour[i] = contourParams.show || contourParams.highlight;\n    if (!params.showContour[i]) continue;\n    params.contourProject[i] = [contourParams.project.x, contourParams.project.y, contourParams.project.z];\n\n    if (contourParams.show) {\n      this.showContour[i] = true;\n      params.levels[i] = contourLevels[i];\n      surface.highlightColor[i] = params.contourColor[i] = str2RgbaArray(contourParams.color);\n\n      if (contourParams.usecolormap) {\n        surface.highlightTint[i] = params.contourTint[i] = 0;\n      } else {\n        surface.highlightTint[i] = params.contourTint[i] = 1;\n      }\n\n      params.contourWidth[i] = contourParams.width;\n      this.contourStart[i] = contourParams.start;\n      this.contourEnd[i] = contourParams.end;\n      this.contourSize[i] = contourParams.size;\n    } else {\n      this.showContour[i] = false;\n      this.contourStart[i] = null;\n      this.contourEnd[i] = null;\n      this.contourSize[i] = 0;\n    }\n\n    if (contourParams.highlight) {\n      params.dynamicColor[i] = str2RgbaArray(contourParams.highlightcolor);\n      params.dynamicWidth[i] = contourParams.highlightwidth;\n    }\n  } // see https://github.com/plotly/plotly.js/issues/940\n\n\n  if (isColormapCircular(colormap)) {\n    params.vertexColor = true;\n  }\n\n  params.objectOffset = this.objectOffset;\n  params.coords = coords;\n  surface.update(params);\n  surface.visible = data.visible;\n  surface.enableDynamic = highlightEnable;\n  surface.enableHighlight = highlightEnable;\n  surface.snapToData = true;\n\n  if ('lighting' in data) {\n    surface.ambientLight = data.lighting.ambient;\n    surface.diffuseLight = data.lighting.diffuse;\n    surface.specularLight = data.lighting.specular;\n    surface.roughness = data.lighting.roughness;\n    surface.fresnel = data.lighting.fresnel;\n  }\n\n  if ('lightposition' in data) {\n    surface.lightPosition = [data.lightposition.x, data.lightposition.y, data.lightposition.z];\n  }\n\n  if (alpha && alpha < 1) {\n    surface.supportsTransparency = true;\n  }\n};\n\nproto.dispose = function () {\n  this.scene.glplot.remove(this.surface);\n  this.surface.dispose();\n};\n\nfunction createSurfaceTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var surface = createSurface({\n    gl: gl\n  });\n  var result = new SurfaceTrace(scene, surface, data.uid);\n  surface._trace = result;\n  result.update(data);\n  scene.glplot.add(surface);\n  return result;\n}\n\nmodule.exports = createSurfaceTrace;","map":{"version":3,"sources":["/Users/leena/Downloads/MyProjectDemo/covidIndia/node_modules/plotly.js/src/traces/surface/convert.js"],"names":["createSurface","require","ndarray","homography","fill","isArrayOrTypedArray","parseColorScale","str2RgbaArray","extractOpts","interp2d","findEmpties","SurfaceTrace","scene","surface","uid","data","showContour","contourStart","contourEnd","contourSize","minValues","Infinity","maxValues","dataScaleX","dataScaleY","refineData","objectOffset","proto","prototype","getXat","a","b","calendar","axis","v","x","undefined","d2l","getYat","y","getZat","z","connectgaps","_interpolatedZ","handlePick","selection","object","xRatio","index","yRatio","j","Math","max","min","round","length","k","_ylength","traceCoordinate","dataCoordinate","xcalendar","fullSceneLayout","xaxis","ycalendar","yaxis","zcalendar","zaxis","i","dataScale","text","hovertext","Array","isArray","textLabel","slice","highlight","glplot","spikes","position","isColormapCircular","colormap","first","rgb","last","shortPrimes","getPow","n","floor","getFactors","powers","push","smallestDivisor","A","result","leastCommonMultiple","B","pow","arrayLCM","calcXnums","xlen","nums","abs","totalDist","calcYnums","ylen","highlyComposites","MIN_RESOLUTION","MAX_RESOLUTION","estimateScale","resSrc","resDst","scale","refineCoords","coords","scaleW","scaleH","width","shape","height","newWidth","newHeight","padWidth","padHeight","padImg","Float32Array","padField","scaledImg","insertIfNewLevel","arr","newValue","found","setContourLevels","newLevels","useNewLevels","needsUpdate","value","allLevels","contourLevels","update","levels","sceneLayout","alpha","opacity","scaleFactor","rawCoords","_emptypoints","NaN","row","col","params","showSurface","hidesurface","contourProject","contourWidth","contourColor","contourTint","dynamicColor","dynamicWidth","dynamicTint","opacityscale","cOpts","intensityBounds","surfacecolor","intensity","pop","highlightEnable","contourParams","contours","show","project","highlightColor","color","usecolormap","highlightTint","start","end","size","highlightcolor","highlightwidth","vertexColor","visible","enableDynamic","enableHighlight","snapToData","ambientLight","lighting","ambient","diffuseLight","diffuse","specularLight","specular","roughness","fresnel","lightPosition","lightposition","supportsTransparency","dispose","remove","createSurfaceTrace","gl","_trace","add","module","exports"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar createSurface = require('gl-surface3d');\n\nvar ndarray = require('ndarray');\nvar homography = require('ndarray-homography');\nvar fill = require('ndarray-fill');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar extractOpts = require('../../components/colorscale').extractOpts;\n\nvar interp2d = require('../heatmap/interp2d');\nvar findEmpties = require('../heatmap/find_empties');\n\nfunction SurfaceTrace(scene, surface, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.surface = surface;\n    this.data = null;\n    this.showContour = [false, false, false];\n    this.contourStart = [null, null, null];\n    this.contourEnd = [null, null, null];\n    this.contourSize = [0, 0, 0];\n    this.minValues = [Infinity, Infinity, Infinity];\n    this.maxValues = [-Infinity, -Infinity, -Infinity];\n    this.dataScaleX = 1.0;\n    this.dataScaleY = 1.0;\n    this.refineData = true;\n    this.objectOffset = [0, 0, 0];\n}\n\nvar proto = SurfaceTrace.prototype;\n\nproto.getXat = function(a, b, calendar, axis) {\n    var v = (\n       (!isArrayOrTypedArray(this.data.x)) ?\n            a :\n       (isArrayOrTypedArray(this.data.x[0])) ?\n            this.data.x[b][a] :\n            this.data.x[a]\n    );\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getYat = function(a, b, calendar, axis) {\n    var v = (\n       (!isArrayOrTypedArray(this.data.y)) ?\n            b :\n       (isArrayOrTypedArray(this.data.y[0])) ?\n            this.data.y[b][a] :\n            this.data.y[b]\n    );\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.getZat = function(a, b, calendar, axis) {\n    var v = this.data.z[b][a];\n\n    if(v === null && this.data.connectgaps && this.data._interpolatedZ) {\n        v = this.data._interpolatedZ[b][a];\n    }\n\n    return (calendar === undefined) ? v : axis.d2l(v, 0, calendar);\n};\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.surface) {\n        var xRatio = (selection.data.index[0] - 1) / this.dataScaleX - 1;\n        var yRatio = (selection.data.index[1] - 1) / this.dataScaleY - 1;\n\n        var j = Math.max(Math.min(Math.round(xRatio), this.data.z[0].length - 1), 0);\n        var k = Math.max(Math.min(Math.round(yRatio), this.data._ylength - 1), 0);\n\n        selection.index = [j, k];\n\n        selection.traceCoordinate = [\n            this.getXat(j, k),\n            this.getYat(j, k),\n            this.getZat(j, k)\n        ];\n\n        selection.dataCoordinate = [\n            this.getXat(j, k, this.data.xcalendar, this.scene.fullSceneLayout.xaxis),\n            this.getYat(j, k, this.data.ycalendar, this.scene.fullSceneLayout.yaxis),\n            this.getZat(j, k, this.data.zcalendar, this.scene.fullSceneLayout.zaxis)\n        ];\n\n        for(var i = 0; i < 3; i++) {\n            var v = selection.dataCoordinate[i];\n            if(v !== null && v !== undefined) {\n                selection.dataCoordinate[i] *= this.scene.dataScale[i];\n            }\n        }\n\n        var text = this.data.hovertext || this.data.text;\n        if(Array.isArray(text) && text[k] && text[k][j] !== undefined) {\n            selection.textLabel = text[k][j];\n        } else if(text) {\n            selection.textLabel = text;\n        } else {\n            selection.textLabel = '';\n        }\n\n        selection.data.dataCoordinate = selection.dataCoordinate.slice();\n\n        this.surface.highlight(selection.data);\n\n        // Snap spikes to data coordinate\n        this.scene.glplot.spikes.position = selection.dataCoordinate;\n\n        return true;\n    }\n};\n\nfunction isColormapCircular(colormap) {\n    var first = colormap[0].rgb;\n    var last = colormap[colormap.length - 1].rgb;\n\n    return (\n        first[0] === last[0] &&\n        first[1] === last[1] &&\n        first[2] === last[2] &&\n        first[3] === last[3]\n    );\n}\n\nvar shortPrimes = [\n    2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97,\n    101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n    211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,\n    307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n    401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,\n    503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\n    601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\n    701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,\n    809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,\n    907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,\n    1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097,\n    1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193,\n    1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297,\n    1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399,\n    1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499,\n    1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597,\n    1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699,\n    1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789,\n    1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889,\n    1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999,\n    2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099,\n    2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179,\n    2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297,\n    2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399,\n    2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477,\n    2503, 2521, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2593,\n    2609, 2617, 2621, 2633, 2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2693, 2699,\n    2707, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791, 2797,\n    2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897,\n    2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999\n];\n\nfunction getPow(a, b) {\n    if(a < b) return 0;\n    var n = 0;\n    while(Math.floor(a % b) === 0) {\n        a /= b;\n        n++;\n    }\n    return n;\n}\n\nfunction getFactors(a) {\n    var powers = [];\n    for(var i = 0; i < shortPrimes.length; i++) {\n        var b = shortPrimes[i];\n        powers.push(\n            getPow(a, b)\n        );\n    }\n    return powers;\n}\n\nfunction smallestDivisor(a) {\n    var A = getFactors(a);\n    var result = a;\n    for(var i = 0; i < shortPrimes.length; i++) {\n        if(A[i] > 0) {\n            result = shortPrimes[i];\n            break;\n        }\n    }\n    return result;\n}\n\nfunction leastCommonMultiple(a, b) {\n    if(a < 1 || b < 1) return undefined;\n    var A = getFactors(a);\n    var B = getFactors(b);\n    var n = 1;\n    for(var i = 0; i < shortPrimes.length; i++) {\n        n *= Math.pow(\n            shortPrimes[i], Math.max(A[i], B[i])\n        );\n    }\n    return n;\n}\n\nfunction arrayLCM(A) {\n    if(A.length === 0) return undefined;\n    var n = 1;\n    for(var i = 0; i < A.length; i++) {\n        n = leastCommonMultiple(n, A[i]);\n    }\n    return n;\n}\n\nproto.calcXnums = function(xlen) {\n    var i;\n    var nums = [];\n    for(i = 1; i < xlen; i++) {\n        var a = this.getXat(i - 1, 0);\n        var b = this.getXat(i, 0);\n\n        if(b !== a &&\n            a !== undefined && a !== null &&\n            b !== undefined && b !== null) {\n            nums[i - 1] = Math.abs(b - a);\n        } else {\n            nums[i - 1] = 0;\n        }\n    }\n\n    var totalDist = 0;\n    for(i = 1; i < xlen; i++) {\n        totalDist += nums[i - 1];\n    }\n\n    for(i = 1; i < xlen; i++) {\n        if(nums[i - 1] === 0) {\n            nums[i - 1] = 1;\n        } else {\n            nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n        }\n    }\n\n    return nums;\n};\n\nproto.calcYnums = function(ylen) {\n    var i;\n    var nums = [];\n    for(i = 1; i < ylen; i++) {\n        var a = this.getYat(0, i - 1);\n        var b = this.getYat(0, i);\n\n        if(b !== a &&\n            a !== undefined && a !== null &&\n            b !== undefined && b !== null) {\n            nums[i - 1] = Math.abs(b - a);\n        } else {\n            nums[i - 1] = 0;\n        }\n    }\n\n    var totalDist = 0;\n    for(i = 1; i < ylen; i++) {\n        totalDist += nums[i - 1];\n    }\n\n    for(i = 1; i < ylen; i++) {\n        if(nums[i - 1] === 0) {\n            nums[i - 1] = 1;\n        } else {\n            nums[i - 1] = Math.round(totalDist / nums[i - 1]);\n        }\n    }\n\n    return nums;\n};\n\nvar highlyComposites = [1, 2, 4, 6, 12, 24, 36, 48, 60, 120, 180, 240, 360, 720, 840, 1260];\n\nvar MIN_RESOLUTION = highlyComposites[9];\nvar MAX_RESOLUTION = highlyComposites[13];\n\nproto.estimateScale = function(resSrc, axis) {\n    var nums = (axis === 0) ?\n        this.calcXnums(resSrc) :\n        this.calcYnums(resSrc);\n\n    var resDst = 1 + arrayLCM(nums);\n\n    while(resDst < MIN_RESOLUTION) {\n        resDst *= 2;\n    }\n\n    while(resDst > MAX_RESOLUTION) {\n        resDst--;\n        resDst /= smallestDivisor(resDst);\n        resDst++;\n\n        if(resDst < MIN_RESOLUTION) {\n         // resDst = MIN_RESOLUTION; // option 1: use min resolution\n            resDst = MAX_RESOLUTION; // option 2: use max resolution\n        }\n    }\n\n    var scale = Math.round(resDst / resSrc);\n    return (scale > 1) ? scale : 1;\n};\n\nproto.refineCoords = function(coords) {\n    var scaleW = this.dataScaleX;\n    var scaleH = this.dataScaleY;\n\n    var width = coords[0].shape[0];\n    var height = coords[0].shape[1];\n\n    var newWidth = Math.floor(coords[0].shape[0] * scaleW + 1) | 0;\n    var newHeight = Math.floor(coords[0].shape[1] * scaleH + 1) | 0;\n\n    // Pad coords by +1\n    var padWidth = 1 + width + 1;\n    var padHeight = 1 + height + 1;\n    var padImg = ndarray(new Float32Array(padWidth * padHeight), [padWidth, padHeight]);\n\n    for(var i = 0; i < coords.length; ++i) {\n        this.surface.padField(padImg, coords[i]);\n\n        var scaledImg = ndarray(new Float32Array(newWidth * newHeight), [newWidth, newHeight]);\n        homography(scaledImg, padImg,\n            [\n                scaleW, 0, 0,\n                0, scaleH, 0,\n                0, 0, 1\n            ]\n        );\n        coords[i] = scaledImg;\n    }\n};\n\nfunction insertIfNewLevel(arr, newValue) {\n    var found = false;\n    for(var k = 0; k < arr.length; k++) {\n        if(newValue === arr[k]) {\n            found = true;\n            break;\n        }\n    }\n    if(found === false) arr.push(newValue);\n}\n\nproto.setContourLevels = function() {\n    var newLevels = [[], [], []];\n    var useNewLevels = [false, false, false];\n    var needsUpdate = false;\n\n    var i, j, value;\n\n    for(i = 0; i < 3; ++i) {\n        if(this.showContour[i]) {\n            needsUpdate = true;\n\n            if(\n                this.contourSize[i] > 0 &&\n                this.contourStart[i] !== null &&\n                this.contourEnd[i] !== null &&\n                this.contourEnd[i] > this.contourStart[i]\n            ) {\n                useNewLevels[i] = true;\n\n                for(j = this.contourStart[i]; j < this.contourEnd[i]; j += this.contourSize[i]) {\n                    value = j * this.scene.dataScale[i];\n\n                    insertIfNewLevel(newLevels[i], value);\n                }\n            }\n        }\n    }\n\n    if(needsUpdate) {\n        var allLevels = [[], [], []];\n        for(i = 0; i < 3; ++i) {\n            if(this.showContour[i]) {\n                allLevels[i] = useNewLevels[i] ? newLevels[i] : this.scene.contourLevels[i];\n            }\n        }\n        this.surface.update({ levels: allLevels });\n    }\n};\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var sceneLayout = scene.fullSceneLayout;\n    var surface = this.surface;\n    var alpha = data.opacity;\n    var colormap = parseColorScale(data, alpha);\n    var scaleFactor = scene.dataScale;\n    var xlen = data.z[0].length;\n    var ylen = data._ylength;\n    var contourLevels = scene.contourLevels;\n\n    // Save data\n    this.data = data;\n\n    /*\n     * Fill and transpose zdata.\n     * Consistent with 'heatmap' and 'contour', plotly 'surface'\n     * 'z' are such that sub-arrays correspond to y-coords\n     * and that the sub-array entries correspond to a x-coords,\n     * which is the transpose of 'gl-surface-plot'.\n     */\n\n    var i, j, k, v;\n    var rawCoords = [];\n    for(i = 0; i < 3; i++) {\n        rawCoords[i] = [];\n        for(j = 0; j < xlen; j++) {\n            rawCoords[i][j] = [];\n            /*\n            for(k = 0; k < ylen; k++) {\n                rawCoords[i][j][k] = undefined;\n            }\n            */\n        }\n    }\n\n    // coords x, y & z\n    for(j = 0; j < xlen; j++) {\n        for(k = 0; k < ylen; k++) {\n            rawCoords[0][j][k] = this.getXat(j, k, data.xcalendar, sceneLayout.xaxis);\n            rawCoords[1][j][k] = this.getYat(j, k, data.ycalendar, sceneLayout.yaxis);\n            rawCoords[2][j][k] = this.getZat(j, k, data.zcalendar, sceneLayout.zaxis);\n        }\n    }\n\n    if(data.connectgaps) {\n        data._emptypoints = findEmpties(rawCoords[2]);\n        interp2d(rawCoords[2], data._emptypoints);\n\n        data._interpolatedZ = [];\n        for(j = 0; j < xlen; j++) {\n            data._interpolatedZ[j] = [];\n            for(k = 0; k < ylen; k++) {\n                data._interpolatedZ[j][k] = rawCoords[2][j][k];\n            }\n        }\n    }\n\n    // Note: log axes are not defined in surfaces yet.\n    // but they could be defined here...\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v === null || v === undefined) {\n                    rawCoords[i][j][k] = NaN;\n                } else {\n                    v = rawCoords[i][j][k] *= scaleFactor[i];\n                }\n            }\n        }\n    }\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v !== null && v !== undefined) {\n                    if(this.minValues[i] > v) {\n                        this.minValues[i] = v;\n                    }\n                    if(this.maxValues[i] < v) {\n                        this.maxValues[i] = v;\n                    }\n                }\n            }\n        }\n    }\n\n    for(i = 0; i < 3; i++) {\n        this.objectOffset[i] = 0.5 * (this.minValues[i] + this.maxValues[i]);\n    }\n\n    for(i = 0; i < 3; i++) {\n        for(j = 0; j < xlen; j++) {\n            for(k = 0; k < ylen; k++) {\n                v = rawCoords[i][j][k];\n                if(v !== null && v !== undefined) {\n                    rawCoords[i][j][k] -= this.objectOffset[i];\n                }\n            }\n        }\n    }\n\n    // convert processed raw data to Float32 matrices\n    var coords = [\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen]),\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen]),\n        ndarray(new Float32Array(xlen * ylen), [xlen, ylen])\n    ];\n    fill(coords[0], function(row, col) { return rawCoords[0][row][col]; });\n    fill(coords[1], function(row, col) { return rawCoords[1][row][col]; });\n    fill(coords[2], function(row, col) { return rawCoords[2][row][col]; });\n    rawCoords = []; // free memory\n\n    var params = {\n        colormap: colormap,\n        levels: [[], [], []],\n        showContour: [true, true, true],\n        showSurface: !data.hidesurface,\n        contourProject: [\n            [false, false, false],\n            [false, false, false],\n            [false, false, false]\n        ],\n        contourWidth: [1, 1, 1],\n        contourColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n        contourTint: [1, 1, 1],\n        dynamicColor: [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]],\n        dynamicWidth: [1, 1, 1],\n        dynamicTint: [1, 1, 1],\n        opacityscale: data.opacityscale,\n        opacity: data.opacity\n    };\n\n    var cOpts = extractOpts(data);\n    params.intensityBounds = [cOpts.min, cOpts.max];\n\n    // Refine surface color if necessary\n    if(data.surfacecolor) {\n        var intensity = ndarray(new Float32Array(xlen * ylen), [xlen, ylen]);\n\n        fill(intensity, function(row, col) {\n            return data.surfacecolor[col][row];\n        });\n\n        coords.push(intensity);\n    } else {\n        // when 'z' is used as 'intensity',\n        // we must scale its value\n        params.intensityBounds[0] *= scaleFactor[2];\n        params.intensityBounds[1] *= scaleFactor[2];\n    }\n\n    if(MAX_RESOLUTION < coords[0].shape[0] ||\n        MAX_RESOLUTION < coords[0].shape[1]) {\n        this.refineData = false;\n    }\n\n    if(this.refineData === true) {\n        this.dataScaleX = this.estimateScale(coords[0].shape[0], 0);\n        this.dataScaleY = this.estimateScale(coords[0].shape[1], 1);\n        if(this.dataScaleX !== 1 || this.dataScaleY !== 1) {\n            this.refineCoords(coords);\n        }\n    }\n\n    if(data.surfacecolor) {\n        params.intensity = coords.pop();\n    }\n\n    var highlightEnable = [true, true, true];\n    var axis = ['x', 'y', 'z'];\n\n    for(i = 0; i < 3; ++i) {\n        var contourParams = data.contours[axis[i]];\n        highlightEnable[i] = contourParams.highlight;\n\n        params.showContour[i] = contourParams.show || contourParams.highlight;\n        if(!params.showContour[i]) continue;\n\n        params.contourProject[i] = [\n            contourParams.project.x,\n            contourParams.project.y,\n            contourParams.project.z\n        ];\n\n        if(contourParams.show) {\n            this.showContour[i] = true;\n            params.levels[i] = contourLevels[i];\n            surface.highlightColor[i] = params.contourColor[i] = str2RgbaArray(contourParams.color);\n\n            if(contourParams.usecolormap) {\n                surface.highlightTint[i] = params.contourTint[i] = 0;\n            } else {\n                surface.highlightTint[i] = params.contourTint[i] = 1;\n            }\n            params.contourWidth[i] = contourParams.width;\n\n            this.contourStart[i] = contourParams.start;\n            this.contourEnd[i] = contourParams.end;\n            this.contourSize[i] = contourParams.size;\n        } else {\n            this.showContour[i] = false;\n\n            this.contourStart[i] = null;\n            this.contourEnd[i] = null;\n            this.contourSize[i] = 0;\n        }\n\n        if(contourParams.highlight) {\n            params.dynamicColor[i] = str2RgbaArray(contourParams.highlightcolor);\n            params.dynamicWidth[i] = contourParams.highlightwidth;\n        }\n    }\n\n    // see https://github.com/plotly/plotly.js/issues/940\n    if(isColormapCircular(colormap)) {\n        params.vertexColor = true;\n    }\n\n    params.objectOffset = this.objectOffset;\n\n    params.coords = coords;\n    surface.update(params);\n\n    surface.visible = data.visible;\n    surface.enableDynamic = highlightEnable;\n    surface.enableHighlight = highlightEnable;\n\n    surface.snapToData = true;\n\n    if('lighting' in data) {\n        surface.ambientLight = data.lighting.ambient;\n        surface.diffuseLight = data.lighting.diffuse;\n        surface.specularLight = data.lighting.specular;\n        surface.roughness = data.lighting.roughness;\n        surface.fresnel = data.lighting.fresnel;\n    }\n\n    if('lightposition' in data) {\n        surface.lightPosition = [data.lightposition.x, data.lightposition.y, data.lightposition.z];\n    }\n\n    if(alpha && alpha < 1) {\n        surface.supportsTransparency = true;\n    }\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.surface);\n    this.surface.dispose();\n};\n\nfunction createSurfaceTrace(scene, data) {\n    var gl = scene.glplot.gl;\n    var surface = createSurface({ gl: gl });\n    var result = new SurfaceTrace(scene, surface, data.uid);\n    surface._trace = result;\n    result.update(data);\n    scene.glplot.add(surface);\n    return result;\n}\n\nmodule.exports = createSurfaceTrace;\n"]},"metadata":{},"sourceType":"script"}