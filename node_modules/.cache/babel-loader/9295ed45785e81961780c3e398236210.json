{"ast":null,"code":"var _jsxFileName = \"/Users/leena/Downloads/MyProjectDemo/covidIndia/src/pages/testVsCases.js\";\nimport React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Plotly from 'plotly.js';\n\nclass TestvsCases extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tests: null,\n      cases: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:5000/getStateMap').then(res => {\n      console.log(res.data);\n      this.setState({\n        tests: res.data.stats_data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    var graphDiv = document.getElementById('statesDiv');\n    Plotly.d3.csv(\"https://raw.githubusercontent.com/leenapatil14/Udacity_Data_Science_Nanodegree_Repo/master/COVID_India/flask_project/web_app/data/India%20State%20Latitude%20and%20Longitude.csv\", function (err, rows) {\n      function unpack(rows, key) {\n        return rows.map(function (row) {\n          return row[key];\n        });\n      }\n\n      var data = [{\n        type: \"scattermapbox\",\n        text: unpack(rows, \"State_Names\"),\n        lon: unpack(rows, \"longitude\"),\n        lat: unpack(rows, \"latitude\"),\n        marker: {\n          color: \"fuchsia\",\n          size: 4\n        }\n      }];\n      console.log(data);\n      var layout = {\n        dragmode: \"zoom\",\n        mapbox: {\n          style: \"open-street-map\",\n          center: {\n            lat: 21.30039105,\n            lon: 76.13001949\n          },\n          zoom: 3\n        },\n        margin: {\n          r: 0,\n          t: 0,\n          b: 0,\n          l: 0\n        }\n      };\n      Plotly.newPlot(graphDiv, data, layout);\n    });\n  }\n\n  render() {\n    var layout_ = {\n      legend: {\n        font: {\n          size: 6,\n          color: \"#000\"\n        }\n      }\n    };\n    let displaytests = this.state.tests ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.state.tests.map(state => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alignCenter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \" Summary of \", state.State_Name, \" \")), /*#__PURE__*/React.createElement(Plot, {\n      data: state.chart,\n      useResizeHandler: true,\n      responsive: true,\n      layout: state.layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"padding10per\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(LinearProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"statesDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nTestvsCases.propTypes = {};\nexport default TestvsCases;","map":{"version":3,"sources":["/Users/leena/Downloads/MyProjectDemo/covidIndia/src/pages/testVsCases.js"],"names":["React","Component","PropTypes","axios","Grid","Plot","LinearProgress","Typography","Plotly","TestvsCases","constructor","props","state","tests","cases","componentDidMount","get","then","res","console","log","data","setState","stats_data","catch","err","graphDiv","document","getElementById","d3","csv","rows","unpack","key","map","row","type","text","lon","lat","marker","color","size","layout","dragmode","mapbox","style","center","zoom","margin","r","t","b","l","newPlot","render","layout_","legend","font","displaytests","State_Name","chart","propTypes"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport axios from 'axios';\nimport { Grid } from '@material-ui/core';\nimport Plot from 'react-plotly.js';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Plotly from 'plotly.js';\nclass TestvsCases extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    state={\n        tests:null,\n        cases:null\n    };\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/getStateMap').then(res=>{\n            console.log(res.data);\n            this.setState({\n                tests:res.data.stats_data\n            })\n            \n        }).catch(err=>{\n            console.log(err)\n        });\n        var graphDiv = document.getElementById('statesDiv');\n            Plotly.d3.csv(\n                \"https://raw.githubusercontent.com/leenapatil14/Udacity_Data_Science_Nanodegree_Repo/master/COVID_India/flask_project/web_app/data/India%20State%20Latitude%20and%20Longitude.csv\",\n                function(err, rows) {\n                    function unpack(rows, key) {\n                        return rows.map(function(row) {\n                            return row[key];\n                        });\n                    }\n            \n                    var data = [\n                        {\n                            type: \"scattermapbox\",\n                            text: unpack(rows, \"State_Names\"),\n                            lon: unpack(rows, \"longitude\"),\n                            lat: unpack(rows, \"latitude\"),\n                            marker: { color: \"fuchsia\", size: 4 }\n                        }\n                    ];\n                    console.log(data)\n                    var layout = {\n                        dragmode: \"zoom\",\n                        mapbox: { style: \"open-street-map\", center: { lat: 21.30039105, lon: 76.13001949  }, zoom: 3 },\n                        margin: { r: 0, t: 0, b: 0, l: 0 }\n                    };\n            \n                    Plotly.newPlot(graphDiv, data, layout);\n                }\n            );\n    }\n\n\n    render() {\n        var layout_={legend : {font : {size : 6, color : \"#000\"}}};\n        \n        let displaytests=this.state.tests? (\n        <div>\n            \n        {this.state.tests.map(state=>\n            <div className=\"alignCenter\">\n                <h4><center> Summary of {state.State_Name} </center></h4>\n            <Plot data={state.chart}\n            useResizeHandler={true}\n            responsive={true}\n            layout={state.layout}\n            \n            ></Plot>\n        </div>\n        )        \n        \n    }\n        {/* <h4><center>Statewise summary of Confirmed Cases per day</center></h4>\n                \n        <div className=\"alignCenter\">\n            <Plot data={this.state.tests}\n            useResizeHandler={true}\n            responsive={true}\n            layout={layout_}\n            \n            ></Plot>\n        </div> */}\n        </div>\n        ):\n        <div className=\"padding10per\">\n        <Typography color=\"textSecondary\">Loading...</Typography>\n        <LinearProgress color=\"secondary\" />\n        </div>;\n        return(\n        <Grid container>\n                <Grid item sm={12} xs={12}>\n                    {/* <div>{displaytests}</div> */}\n                    <div id=\"statesDiv\"></div>\n                </Grid>\n                \n            </Grid>\n        );\n    }\n}\n\nTestvsCases.propTypes = {\n\n};\n\nexport default TestvsCases;"]},"metadata":{},"sourceType":"module"}